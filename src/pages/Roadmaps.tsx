import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";

const Roadmaps = () => {
  return (
    <div className="min-h-screen pt-20 section-padding">
      <div className="container mx-auto">
        <h1 className="text-4xl font-bold mb-8 text-gradient">Roadmaps</h1>
        
        <Tabs defaultValue="python" className="w-full">
          <TabsList className="mb-8">
            <TabsTrigger value="python">Python</TabsTrigger>
            <TabsTrigger value="django">Django</TabsTrigger>
            <TabsTrigger value="telegram">–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞</TabsTrigger>
            <TabsTrigger value="algorithms">–ê–ª–≥–æ—Ä–∏—Ç–º—ã</TabsTrigger>
          </TabsList>

          <TabsContent value="python" className="space-y-8">
            {pythonRoadmap.map((section, index) => (
              <Card key={index}>
                <CardHeader>
                  <CardTitle>{section.title}</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <p className="text-muted-foreground"><strong>–¶–µ–ª—å:</strong> {section.goal}</p>
                  
                  {section.topics && (
                    <div>
                      <h4 className="font-semibold mb-2">–¢–µ–º—ã:</h4>
                      <ul className="list-disc pl-6 space-y-1">
                        {section.topics.map((topic, i) => (
                          <li key={i} className="text-muted-foreground">{topic}</li>
                        ))}
                      </ul>
                    </div>
                  )}
                  
                  {section.resources && (
                    <div>
                      <h4 className="font-semibold mb-2">–†–µ—Å—É—Ä—Å—ã:</h4>
                      <ul className="list-disc pl-6 space-y-1">
                        {section.resources.map((resource, i) => (
                          <li key={i} className="text-muted-foreground">{resource}</li>
                        ))}
                      </ul>
                    </div>
                  )}

                  {section.projects && (
                    <div>
                      <h4 className="font-semibold mb-2">–ò–¥–µ–∏ –ø—Ä–æ–µ–∫—Ç–æ–≤:</h4>
                      <ul className="list-disc pl-6 space-y-1">
                        {section.projects.map((project, i) => (
                          <li key={i} className="text-muted-foreground">{project}</li>
                        ))}
                      </ul>
                    </div>
                  )}
                </CardContent>
              </Card>
            ))}

            <p className="text-center text-lg text-muted-foreground mt-8">
              –ì–æ—Ç–æ–≤—ã –ø–æ–≥—Ä—É–∑–∏—Ç—å—Å—è –≤ Python? –°–ª–µ–¥—É–π—Ç–µ —ç—Ç–æ–π –¥–æ—Ä–æ–∂–Ω–æ–π –∫–∞—Ä—Ç–µ –∏ –Ω–∞—á–Ω–∏—Ç–µ —Å–æ–∑–¥–∞–≤–∞—Ç—å –∑–Ω–∞—á–∏–º—ã–µ –ø—Ä–æ–µ–∫—Ç—ã! üöÄ
            </p>
          </TabsContent>

          <TabsContent value="django" className="space-y-8">
            <div className="mb-8">
              <h2 className="text-3xl font-bold mb-4">Master Django: The Ultimate Roadmap for Web Development</h2>
              <p className="text-muted-foreground">
                Follow this roadmap to learn Django step by step. Whether you're a beginner or aiming to create complex web applications, 
                this guide will take you through the process of mastering Django.
              </p>
            </div>
            
            {djangoRoadmap.map((section, index) => (
              <Card key={index}>
                <CardHeader>
                  <CardTitle>{section.title}</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <p className="text-muted-foreground"><strong>–¶–µ–ª—å:</strong> {section.goal}</p>
                  
                  {section.topics && (
                    <div>
                      <h4 className="font-semibold mb-2">–¢–µ–º—ã:</h4>
                      <ul className="list-disc pl-6 space-y-1">
                        {section.topics.map((topic, i) => (
                          <li key={i} className="text-muted-foreground">{topic}</li>
                        ))}
                      </ul>
                    </div>
                  )}
                  
                  {section.resources && (
                    <div>
                      <h4 className="font-semibold mb-2">–†–µ—Å—É—Ä—Å—ã:</h4>
                      <ul className="list-disc pl-6 space-y-1">
                        {section.resources.map((resource, i) => (
                          <li key={i} className="text-muted-foreground">{resource}</li>
                        ))}
                      </ul>
                    </div>
                  )}
                </CardContent>
              </Card>
            ))}

            <p className="text-center text-lg text-muted-foreground mt-8">
              Dive into Django and start building robust web applications with this roadmap. Ready to start? üöÄ
            </p>
          </TabsContent>

          <TabsContent value="telegram">
            <Card>
              <CardContent className="p-6">
                <p className="text-muted-foreground">–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ...</p>
              </CardContent>
            </Card>
          </TabsContent>

          <TabsContent value="algorithms">
            <Card>
              <CardContent className="p-6">
                <p className="text-muted-foreground">–°–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–æ...</p>
              </CardContent>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
};

const pythonRoadmap = [
  {
    title: "1. Python Basics (2-4 –Ω–µ–¥–µ–ª–∏)",
    goal: "–ü–æ–Ω—è—Ç—å –æ—Å–Ω–æ–≤—ã –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è –Ω–∞ Python.",
    topics: [
      "Data types: integers, floats, strings, lists, dictionaries, sets",
      "Control structures: if-else, loops (for, while)",
      "Functions: defining, calling, arguments, return values",
      "File handling: reading and writing files",
      "Handling exceptions",
    ],
    resources: [
      "Official Python documentation (python.org)",
      '"Automate the Boring Stuff with Python" by Al Sweigart',
    ],
  },
  {
    title: "2. Libraries and Tools (2-3 –Ω–µ–¥–µ–ª–∏)",
    goal: "–ù–∞—É—á–∏—Ç—å—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –∏ –≤–Ω–µ—à–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ Python.",
    topics: [
      "Math operations with math and random",
      "Working with dates and times using datetime",
      "File and OS operations with os and sys",
      "Install and manage libraries with pip",
    ],
    resources: [
      "Online tutorials and practice platforms like Real Python",
    ],
  },
  {
    title: "3. Object-Oriented Programming (2 –Ω–µ–¥–µ–ª–∏)",
    goal: "–ü–æ–Ω—è—Ç—å –ø—Ä–∏–Ω—Ü–∏–ø—ã –û–û–ü –∏ –∏—Ö –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –≤ Python.",
    topics: [
      "Classes and objects",
      "Inheritance and polymorphism",
      "Encapsulation and abstraction",
    ],
    resources: [
      '"Python Crash Course" by Eric Matthes',
    ],
    projects: [
      "Create a simple game or a CRUD (Create, Read, Update, Delete) application",
    ],
  },
  {
    title: "4. Data Analysis and Visualization (2-3 –Ω–µ–¥–µ–ª–∏)",
    goal: "–ù–∞—É—á–∏—Ç—å—Å—è –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∏ –≤–∏–∑—É–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ.",
    topics: [
      "Data manipulation with pandas",
      "Numerical computations with numpy",
      "Basic plotting with matplotlib",
    ],
    projects: [
      "Analyze and visualize a small dataset (e.g., CSV file with sales data)",
    ],
  },
  {
    title: "5. Projects and Practice (2+ –Ω–µ–¥–µ–ª–∏)",
    goal: "–ü—Ä–∏–º–µ–Ω–∏—Ç—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –Ω–∞–≤—ã–∫–∏ –¥–ª—è —Ä–µ—à–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á.",
    projects: [
      "To-Do List Manager (CLI application)",
      "Basic web scraper with BeautifulSoup",
      "Small automation scripts (e.g., rename files in a folder)",
    ],
    resources: [
      "GitHub: Contribute to open-source projects",
      "Practice platforms like HackerRank or LeetCode",
    ],
  },
];

const djangoRoadmap = [
  {
    title: "1. –û—Å–Ω–æ–≤—ã Django (2-3 –Ω–µ–¥–µ–ª–∏)",
    goal: "–û—Å–≤–æ–∏—Ç—å –±–∞–∑–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É Django –∏ –Ω–∞—É—á–∏—Ç—å—Å—è —Å–æ–∑–¥–∞–≤–∞—Ç—å –ø—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
    topics: [
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ Django, —Ä–∞–±–æ—Ç–∞ —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º–∏ –æ–∫—Ä—É–∂–µ–Ω–∏—è–º–∏",
      "–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞ Django: settings.py, urls.py, views.py",
      "–°–æ–∑–¥–∞–Ω–∏–µ –∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è",
      "–ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è URL –∏ –±–∞–∑–æ–≤—ã–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏—è (views)",
    ],
    resources: [
      "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è (docs.djangoproject.com)",
      "–ö—É—Ä—Å Django –Ω–∞ YouTube",
    ],
  },
  {
    title: "2. –ú–æ–¥–µ–ª–∏ –∏ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (2 –Ω–µ–¥–µ–ª–∏)",
    goal: "–ù–∞—É—á–∏—Ç—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å ORM Django –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–º–∏ —á–µ—Ä–µ–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö.",
    topics: [
      "–°–æ–∑–¥–∞–Ω–∏–µ –º–æ–¥–µ–ª–µ–π",
      "–ú–∏–≥—Ä–∞—Ü–∏–∏ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–∞–∑–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö",
      "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ SQLite –∏–ª–∏ PostgreSQL",
      "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å Django: –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–æ–¥–µ–ª—è–º–∏",
    ],
    resources: [
      "Django ORM Cookbook",
    ],
  },
  {
    title: "3. –®–∞–±–ª–æ–Ω—ã –∏ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥ (2 –Ω–µ–¥–µ–ª–∏)",
    goal: "–°–æ–∑–¥–∞—Ç—å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –ø–æ–º–æ—â—å—é —à–∞–±–ª–æ–Ω–æ–≤ –∏ HTML.",
    topics: [
      "–†–∞–±–æ—Ç–∞ —Å —à–∞–±–ª–æ–Ω–∞–º–∏ Django ({% extends %}, {% block %})",
      "–ü–µ—Ä–µ–¥–∞—á–∞ –¥–∞–Ω–Ω—ã—Ö –≤ —à–∞–±–ª–æ–Ω—ã —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç",
      "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Bootstrap –¥–ª—è —Å—Ç–∏–ª–∏–∑–∞—Ü–∏–∏",
    ],
    projects: [
      "–°–æ–∑–¥–∞–Ω–∏–µ –±–ª–æ–≥–∞ –∏–ª–∏ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ-—Å–∞–π—Ç–∞",
    ],
  },
  {
    title: "4. –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è (2 –Ω–µ–¥–µ–ª–∏)",
    goal: "–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Å–∏—Å—Ç–µ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–æ–º.",
    topics: [
      "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è, –≤—Ö–æ–¥ –∏ –≤—ã—Ö–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
      "–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å—Ç—Ä–∞–Ω–∏—Ü–∞–º",
      "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–π –º–æ–¥–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π",
    ],
    resources: [
      "–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è Django –ø–æ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏",
    ],
  },
  {
    title: "5. API –∏ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ (3 –Ω–µ–¥–µ–ª–∏)",
    goal: "–°–æ–∑–¥–∞—Ç—å API —Å –ø–æ–º–æ—â—å—é Django REST Framework (DRF).",
    topics: [
      "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ DRF",
      "–°–æ–∑–¥–∞–Ω–∏–µ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ç–æ—Ä–æ–≤ –∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–π API",
      "–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API —Å –ø–æ–º–æ—â—å—é Postman",
    ],
    projects: [
      "–†–∞–∑—Ä–∞–±–æ—Ç–∫–∞ API –¥–ª—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏–ª–∏ –≤–Ω–µ—à–Ω–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞",
    ],
  },
  {
    title: "6. –î–µ–ø–ª–æ–π –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è (2 –Ω–µ–¥–µ–ª–∏)",
    goal: "–†–∞–∑–≤–µ—Ä–Ω—É—Ç—å Django-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ.",
    topics: [
      "–î–µ–ø–ª–æ–π –Ω–∞ VPS: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ Gunicorn, –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Nginx",
      "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏–∫–∞–º–∏ –∏ –º–µ–¥–∏–∞—Ñ–∞–π–ª–∞–º–∏",
      "–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏",
    ],
    resources: [
      "DigitalOcean, Render, –∏–ª–∏ Heroku",
    ],
  },
];

export default Roadmaps;